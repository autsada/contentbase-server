/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./context"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AddressSubscriptionInput: { // input type
    address: string; // String!
  }
  CreateProfileInput: { // input type
    handle: string; // String!
    imageURI?: string | null; // String
  }
  HasRoleInput: { // input type
    role: NexusGenEnums['Role']; // Role!
  }
}

export interface NexusGenEnums {
  Role: "ADMIN_ROLE" | "DEFAULT_ADMIN_ROLE" | "UPGRADER_ROLE"
  WebHookEventCategory: "external" | "internal" | "token"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Account: { // root type
    address: string; // String!
    authUid: string; // String!
    id: string; // ID!
    loggedInProfile: number; // Int!
    profiles: NexusGenRootTypes['Profile'][]; // [Profile!]!
    testnet: boolean; // Boolean!
  }
  AddressSubscriptionResult: { // root type
    event: NexusGenEnums['WebHookEventCategory']; // WebHookEventCategory!
    fromAddress: string; // String!
    toAddress: string; // String!
  }
  CreateProfileResult: { // root type
    profileId?: number | null; // Int
  }
  CreateWalletResult: { // root type
    address: string; // String!
  }
  EstimateCreateProfileGasResult: { // root type
    gas: string; // String!
  }
  GetAccount: { // root type
    account?: NexusGenRootTypes['Account'] | null; // Account
  }
  Mutation: {};
  Profile: { // root type
    handle: string; // String!
    imageURI?: string | null; // String
    isDefault: boolean; // Boolean!
    owner: string; // String!
    profileId: number; // Int!
    uid: string; // String!
  }
  Query: {};
  Subscription: {};
  Wallet: { // root type
    address: string; // String!
    id: string; // ID!
    key: string; // String!
  }
  WebHookAddressActivity: { // root type
    asset: string; // String!
    category: NexusGenEnums['WebHookEventCategory']; // WebHookEventCategory!
    erc721TokenId?: string | null; // String
    fromAddress: string; // String!
    hash: string; // String!
    rawContract: NexusGenRootTypes['WebHookRawContract']; // WebHookRawContract!
    toAddress: string; // String!
    value?: number | null; // Float
  }
  WebHookEvent: { // root type
    activity: NexusGenRootTypes['WebHookAddressActivity'][]; // [WebHookAddressActivity!]!
    network: string; // String!
  }
  WebHookRawContract: { // root type
    address?: string | null; // String
    decimal?: number | null; // Int
    rawValue?: string | null; // String
  }
  WebHookRequestBody: { // root type
    createdAt: string; // String!
    event: NexusGenRootTypes['WebHookEvent']; // WebHookEvent!
    id: string; // String!
    type: string; // String!
    webhookId: string; // String!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Account: { // field return type
    address: string; // String!
    authUid: string; // String!
    id: string; // ID!
    loggedInProfile: number; // Int!
    profiles: NexusGenRootTypes['Profile'][]; // [Profile!]!
    testnet: boolean; // Boolean!
  }
  AddressSubscriptionResult: { // field return type
    event: NexusGenEnums['WebHookEventCategory']; // WebHookEventCategory!
    fromAddress: string; // String!
    toAddress: string; // String!
  }
  CreateProfileResult: { // field return type
    profileId: number | null; // Int
  }
  CreateWalletResult: { // field return type
    address: string; // String!
  }
  EstimateCreateProfileGasResult: { // field return type
    gas: string; // String!
  }
  GetAccount: { // field return type
    account: NexusGenRootTypes['Account'] | null; // Account
  }
  Mutation: { // field return type
    createProfileNft: NexusGenRootTypes['CreateProfileResult']; // CreateProfileResult!
    createWallet: NexusGenRootTypes['CreateWalletResult']; // CreateWalletResult!
    estimateCreateProfileGas: NexusGenRootTypes['EstimateCreateProfileGasResult']; // EstimateCreateProfileGasResult!
    hasRole: boolean; // Boolean!
  }
  Profile: { // field return type
    handle: string; // String!
    imageURI: string | null; // String
    isDefault: boolean; // Boolean!
    owner: string; // String!
    profileId: number; // Int!
    uid: string; // String!
  }
  Query: { // field return type
    getMyBalance: string; // String!
    getMyProfiles: Array<NexusGenRootTypes['Profile'] | null>; // [Profile]!
    getProfilesCount: number; // Int!
    isHandleUnique: boolean; // Boolean!
  }
  Subscription: { // field return type
    addressUpdated: NexusGenRootTypes['AddressSubscriptionResult']; // AddressSubscriptionResult!
  }
  Wallet: { // field return type
    address: string; // String!
    id: string; // ID!
    key: string; // String!
  }
  WebHookAddressActivity: { // field return type
    asset: string; // String!
    category: NexusGenEnums['WebHookEventCategory']; // WebHookEventCategory!
    erc721TokenId: string | null; // String
    fromAddress: string; // String!
    hash: string; // String!
    rawContract: NexusGenRootTypes['WebHookRawContract']; // WebHookRawContract!
    toAddress: string; // String!
    value: number | null; // Float
  }
  WebHookEvent: { // field return type
    activity: NexusGenRootTypes['WebHookAddressActivity'][]; // [WebHookAddressActivity!]!
    network: string; // String!
  }
  WebHookRawContract: { // field return type
    address: string | null; // String
    decimal: number | null; // Int
    rawValue: string | null; // String
  }
  WebHookRequestBody: { // field return type
    createdAt: string; // String!
    event: NexusGenRootTypes['WebHookEvent']; // WebHookEvent!
    id: string; // String!
    type: string; // String!
    webhookId: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  Account: { // field return type name
    address: 'String'
    authUid: 'String'
    id: 'ID'
    loggedInProfile: 'Int'
    profiles: 'Profile'
    testnet: 'Boolean'
  }
  AddressSubscriptionResult: { // field return type name
    event: 'WebHookEventCategory'
    fromAddress: 'String'
    toAddress: 'String'
  }
  CreateProfileResult: { // field return type name
    profileId: 'Int'
  }
  CreateWalletResult: { // field return type name
    address: 'String'
  }
  EstimateCreateProfileGasResult: { // field return type name
    gas: 'String'
  }
  GetAccount: { // field return type name
    account: 'Account'
  }
  Mutation: { // field return type name
    createProfileNft: 'CreateProfileResult'
    createWallet: 'CreateWalletResult'
    estimateCreateProfileGas: 'EstimateCreateProfileGasResult'
    hasRole: 'Boolean'
  }
  Profile: { // field return type name
    handle: 'String'
    imageURI: 'String'
    isDefault: 'Boolean'
    owner: 'String'
    profileId: 'Int'
    uid: 'String'
  }
  Query: { // field return type name
    getMyBalance: 'String'
    getMyProfiles: 'Profile'
    getProfilesCount: 'Int'
    isHandleUnique: 'Boolean'
  }
  Subscription: { // field return type name
    addressUpdated: 'AddressSubscriptionResult'
  }
  Wallet: { // field return type name
    address: 'String'
    id: 'ID'
    key: 'String'
  }
  WebHookAddressActivity: { // field return type name
    asset: 'String'
    category: 'WebHookEventCategory'
    erc721TokenId: 'String'
    fromAddress: 'String'
    hash: 'String'
    rawContract: 'WebHookRawContract'
    toAddress: 'String'
    value: 'Float'
  }
  WebHookEvent: { // field return type name
    activity: 'WebHookAddressActivity'
    network: 'String'
  }
  WebHookRawContract: { // field return type name
    address: 'String'
    decimal: 'Int'
    rawValue: 'String'
  }
  WebHookRequestBody: { // field return type name
    createdAt: 'String'
    event: 'WebHookEvent'
    id: 'String'
    type: 'String'
    webhookId: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createProfileNft: { // args
      input: NexusGenInputs['CreateProfileInput']; // CreateProfileInput!
    }
    estimateCreateProfileGas: { // args
      input: NexusGenInputs['CreateProfileInput']; // CreateProfileInput!
    }
    hasRole: { // args
      data: NexusGenInputs['HasRoleInput']; // HasRoleInput!
    }
  }
  Query: {
    getMyBalance: { // args
      address: string; // String!
    }
    isHandleUnique: { // args
      handle: string; // String!
    }
  }
  Subscription: {
    addressUpdated: { // args
      input: NexusGenInputs['AddressSubscriptionInput']; // AddressSubscriptionInput!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}